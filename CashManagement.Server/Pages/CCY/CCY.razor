@page "/ccy"

@using CashManagement.Domain.Interface;
@using CashManagement.Domain.Model;
@using CashManagement.Domain;
@using CashManagement.Utility.Extension;
@using System.Windows.Input;

@inject ICcyService _ccyService
@inject IDialogService DialogService
@inject SKLAuthenticator _authenticator;

<AuthorizeView Context="authContext" Roles="Admin,SuperAdmin,User">
    <NotAuthorized>
        沒有權限阿
        <MudButton Color="Color.Primary" Variant="Variant.Filled" @onclick="Login">登入</MudButton>
    </NotAuthorized>
    <Authorized>
        <PageTitle>西西歪</PageTitle>
        <MudText Typo="Typo.h3" GutterBottom="true">CCY_BASE</MudText>

        <MudStack>
            <MudItem>
                <MudButton Color="Color.Primary" Variant="Variant.Filled" @onclick="RefreshDataGrid">查詢</MudButton>
                <MudButton Color="Color.Primary" Variant="Variant.Filled" @onclick="Insert">新增</MudButton>
            </MudItem>
            <MudDataGrid T="CcyModel" Items="@CcyList" SortMode=SortMode.Multiple>
                <Columns>
                    <PropertyColumn Property="x => x.ccy" Title="Code" Sortable="false" />
                    <PropertyColumn Property="x => x.ccy_name" Title="Name" />
                    <PropertyColumn Property="x => x.ccy_e_name" />
                    <PropertyColumn Property="x => x.int_base_days" Title="天數" />
                    <PropertyColumn Property="@(x=>$"{x.ccy} ({x.ccy_name})")" Title="完整名稱" />
                    <TemplateColumn CellClass="d-flex justify-end">
                        <CellTemplate>
                            <MudButton Size="@Size.Small" Variant="@Variant.Filled" Color="@Color.Primary" @onclick="@((e) => Modify(context.Item))">修改</MudButton>
                        </CellTemplate>
                    </TemplateColumn>
                </Columns>
                <PagerContent>
                    <MudDataGridPager T="CcyModel" />
                </PagerContent>
            </MudDataGrid>
        </MudStack>
    </Authorized>
</AuthorizeView>

@code {
    IEnumerable<CcyModel> CcyList = new List<CcyModel>();

    /// <summary>
    /// 頁面載入時執行
    /// </summary>
    /// <returns></returns>
    protected override async Task OnInitializedAsync()
    {
        RefreshDataGrid();
    }

    /// <summary>
    /// 更新DataGrid資料
    /// </summary>
    private void RefreshDataGrid()
    {
        CcyList = _ccyService.GetAll().ToList();
    }
    /// <summary>
    /// 編輯資料
    /// </summary>
    /// <param name="model"></param>
    private async void Modify(CcyModel model)
    {
        await ShowDialog(model, 2);
    }
    /// <summary>
    /// 新增資料
    /// </summary>
    private async void Insert()
    {
        var model = new CcyModel();
        await ShowDialog(model, 1);
    }
    /// <summary>
    /// 打開編輯彈窗
    /// </summary>
    /// <param name="model"></param>
    /// <param name="mode"></param>
    /// <returns></returns>
    async Task ShowDialog(CcyModel model, int mode)
    {
        var parameters = new DialogParameters { ["Model"] = model, ["DialogMode"] = mode };

        var dialog = await DialogService.ShowAsync<CCY_Dialog>("Delete Server", parameters);
        var result = await dialog.Result;

        if (!result.Canceled)
        {
            RefreshDataGrid();
            StateHasChanged(); //刷新畫面
        }
    }
    async Task Login()
    {
        var authState = await _authenticator.GetAuthenticationStateAsync();
        var user = authState.User;
        if (user.Identity.IsAuthenticated)
        {
        }
    }
}